- name: use openstack project
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc project openstack

- name: create osp-secret
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    cd {{ install_yamls_path }}
    make input

- name: set service passwords
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    {% if barbican_password %}
        oc set data secret/osp-secret "BarbicanPassword={{ barbican_password }}"
    {% endif %}
    {% if cinder_password %}
        oc set data secret/osp-secret "CinderPassword={{ cinder_password }}"
    {% endif %}
    {% if glance_password %}
        oc set data secret/osp-secret "GlancePassword={{ glance_password }}"
    {% endif %}
    {% if ironic_password %}
        oc set data secret/osp-secret "IronicPassword={{ ironic_password }}"
        oc set data secret/osp-secret "IronicInspectorPassword={{ ironic_password }}"
    {% endif %}
    {% if neutron_password %}
        oc set data secret/osp-secret "NeutronPassword={{ neutron_password }}"
    {% endif %}
    {% if nova_password %}
        oc set data secret/osp-secret "NovaPassword={{ nova_password }}"
    {% endif %}
    {% if octavia_password %}
        oc set data secret/osp-secret "OctaviaPassword={{ octavia_password }}"
    {% endif %}
    {% if placement_password %}
        oc set data secret/osp-secret "PlacementPassword={{ placement_password }}"
    {% endif %}
    {% if heat_password %}
        oc set data secret/osp-secret "HeatPassword={{ heat_password }}"
        oc set data secret/osp-secret "HeatAuthEncryptionKey={{ heat_auth_encryption_key }}"
    {% endif %}
    {% if manila_password %}
        oc set data secret/osp-secret "ManilaPassword={{ manila_password }}"
    {% endif %}
    {% if swift_password %}
        oc set data secret/osp-secret "SwiftPassword={{ swift_password }}"
    {% endif %}

- name: template out the tls override for deployment
  ansible.builtin.template:
    src: tls_overrides.j2
    dest: "../config/base/tls_overrides.yaml"
    mode: '644'
    force: true

- name: when periodic, create OpenStackVersion CR with container overrides
  when:
    - periodic|default(false)
    - container_registry is defined
    - container_tag is defined
    - container_namespace is defined
  block:
    - name: template out the OpenStackVersion deployment with container overrides
      ansible.builtin.template:
        src: openstack_version.j2
        dest: "../config/openstack_version_overrides.yaml"
        mode: '644'
        force: true

    - name: Apply OpenStackVersion with container overrides to environment
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        oc apply -f openstack_version_overrides.yaml
      args:
        chdir: "../config"

- name: Deploy the podified control plane
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    mkdir -p tmp
    oc kustomize base > tmp/test_deployment.yaml
    oc apply -f tmp/test_deployment.yaml
  args:
    chdir: "../config"

- name: wait for mariadb to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc get pod openstack-galera-0 -o jsonpath='{.status.phase}{"\n"}' | grep Running
  register: mariadb_running_result
  until: mariadb_running_result is success
  retries: 60
  delay: 2

- name: wait for cell1 mariadb to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc get pod openstack-cell1-galera-0 -o jsonpath='{.status.phase}{"\n"}' | grep Running
  register: mariadb_running_result
  until: mariadb_running_result is success
  retries: 60
  delay: 2

- name: Patch openstack upstream dns server to set the correct value for the environment
  when: upstream_dns is defined
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    crname=$(oc get openstackcontrolplane -o name)
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/dns/template/options", "value": [{"key": "server", "values": ["{{ upstream_dns }}"]}]}]'

- name: Patch rabbitmq resources for lower resource consumption
  changed_when: false
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    crname=$(oc get openstackcontrolplane -o name)
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq/resources/requests/cpu", "value": 500m}]'
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq/resources/requests/memory", "value": 500Mi}]'
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq-cell1/resources/requests/cpu", "value": 500m}]'
    oc patch ${crname} --type json \
      -p='[{"op": "replace", "path": "/spec/rabbitmq/templates/rabbitmq-cell1/resources/requests/memory", "value": 500Mi}]'
